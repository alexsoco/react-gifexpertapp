{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onClick","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAiCC,mBAAS,wBAA1C,mBAAMC,EAAN,KAAkBC,EAAlB,KAmBA,OACI,sBAAMC,SAdS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAK,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,MAUlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,QATM,WACdT,EAAc,KASNU,SAxBY,SAACR,GACrBF,EAAcE,EAAES,OAAOH,a,+BCLlBI,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEZG,EAFY,gBAGCA,EAAKC,OAHN,uBAGXC,EAHW,EAGXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAF,sDCDPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLsB,SAACA,GAEvB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAEPxB,EAAQC,GACFwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKtB,CAACpB,IAEIqB,EDhByBK,CAAa1B,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDhB,KADpD,OAGCoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEnBpBgB,EAAa,WAE1B,MAAkC1C,mBAAS,CAAC,gBAA5C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACA,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAF5B,QAGA,uBAEA,6BAEI4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCfjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.086841b2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {       //component function\r\n    \r\n    const[inputValue, setInputValue]=useState('Añade un elemento');//Hook\r\n\r\n    const handleInputChange=(e)=>{      //función que se activa cuando inputValue cambia\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    const handleSubmit=(e)=>{       //función que se activa al darle al enter\r\n        e.preventDefault()\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categ=>[ inputValue,...categ, ]);\r\n            setInputValue('');    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    const handlevacio=()=>{     //función que se activa al darle click al input \r\n        setInputValue('');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onClick={handlevacio}\r\n                onChange={handleInputChange}\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={     \r\n    setCategories:PropTypes.func.isRequired     //Para que setCategories se tenga que usar si o sí\r\n}","\r\n\r\n\r\nexport const getGifs= async(category)=>{       //petición fetch\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lLrbsPrWWBxd92muLQHCGH6LDaqIB49U`;\r\n    const resp=await fetch(url)\r\n    const {data}=await resp.json()\r\n\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {       //muestra cada gif con su título\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {     //lista de elementos doraemon..etc\r\n\r\n    \r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'> {category}</h3>    {/*resultado del enter en el input*/} \r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className='card-grid'>\r\n            \r\n            \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem \r\n                        key={img.id}        //es necesario el key para cada child\r\n                        {...img}        //para que no se tenga que poner en GifGridItem\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs=(category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n       getGifs(category)\r\n            .then(imgs=>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n           \r\n            }) \r\n\r\n    },[category])\r\n    \r\n    return state; //data:[], loading:true\r\n\r\n\r\n\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp=()=>{     //principal component function\r\n\r\nconst [categories, setCategories]=useState(['Real Madrid']);   //useState\r\n\r\n\r\nreturn(\r\n<>\r\n<h2>GifExpertApp</h2>\r\n<AddCategory setCategories={setCategories}/>     {/*componente input*/}\r\n<hr />\r\n\r\n<ol>\r\n{\r\n    categories.map(category=>(\r\n        <GifGrid        //componente lista de Gifs\r\n            key={category}\r\n            category={category} \r\n        />\r\n    ))\r\n\r\n}\r\n\r\n</ol>\r\n</>\r\n)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}